---
- name: Setup Kubeconfig and Setup Context for new User
  hosts: localhost
  vars_files:
    - values.yaml
  tasks:
    - name: Retrieve current cluster name
      shell: kubectl config current-context | awk -F/ '{print $1}'
      register: current_cluster

    - name: Store current cluster name in variable
      set_fact:
        ClusterName: "{{ current_cluster.stdout }}"

    - name: Retrieve cluster address
      shell: kubectl cluster-info | awk '/Kubernetes master/ {print $NF}' 
      register: cluster_info

    - name: Extract cluster address
      set_fact:
        ClusterAddress: "{{ cluster_info.stdout| regex_replace('\x1b\\[.*?m', '')  }}"

    - name: Remove old kubeconfig File for "{{ UserName }}"
      file:
        path: /home/pronojit/DevOpsStudy/certs/{{UserName}}.kubeconfig
        state: absent
      ignore_errors: yes

    - name: Setting up kubeconfig for "{{ UserName }}"
      ansible.builtin.command: kubectl --kubeconfig /home/pronojit/DevOpsStudy/certs/{{UserName}}.kubeconfig config set-cluster {{ClusterName}} --server {{ClusterAddress}} --certificate-authority=/home/pronojit/DevOpsStudy/certs/ca.crt
      
    - name: Add User in Kubeconfig File
      ansible.builtin.command: kubectl --kubeconfig /home/pronojit/DevOpsStudy/certs/{{UserName}}.kubeconfig config set-credentials {{UserName}} --client-certificate /home/pronojit/DevOpsStudy/certs/{{UserName}}.crt --client-key /home/pronojit/DevOpsStudy/certs/{{UserName}}.key

    - name: Setting Up Context For New User
      ansible.builtin.command: kubectl --kubeconfig /home/pronojit/DevOpsStudy/certs/{{UserName}}.kubeconfig config set-context {{UserName}}-context --cluster {{ClusterName}} --namespace {{NameSpace}} --user {{UserName}}

    - name: Modifying User Context 
      shell: |
              sed -i 's/^current-context: ""/current-context: "{{UserName}}-context"/g' /home/pronojit/DevOpsStudy/certs/{{UserName}}.kubeconfig


